import {Palette} from "../models/palette.model";
import {Color} from "../models/color.model";
import {Shade} from "../models/shade.model";

export class PaletteExporter {

  /**
   * Export a palette for usage in plain CSS as CSS properties.
   * @param palette Palette to export
   */
  static exportPaletteToCSS(palette: Palette) {
    return `/* Color palette generated by colors.apps.pawcode.de */\n:root {\n${palette.colors.map(c => this.exportColorToCSS(c)).join('\n\n')}\n}`
  }

  /**
   * Export a color for usage in plain CSS as CSS properties.
   * @param color Color to export
   * @private
   */
  private static exportColorToCSS(color: Color) {
    const name = color.name.replace(/\s+/g, '-').toLowerCase()
    return color.shades.map(s => this.exportShadeToCSS(s, name)).join('\n')
  }

  /**
   * Export a shade for usage in plain CSS as CSS property.
   * @param shade Shade to export
   * @param name Name of the color
   * @private
   */
  private static exportShadeToCSS(shade: Shade, name: string) {
    return `\t--${name}-${shade.index}:${shade.index < 100 ? ' ' : ''} ${shade.hex};`
  }

  /**
   * Export a palette for usage in TailwindCSS.
   * @param palette Palette to export
   */
  static exportPaletteToTailwind(palette: Palette) {
    return palette.colors.map(c => this.exportColorToTailwind(c)).join(',\n')
  }

  /**
   * Export a color for usage in TailwindCSS.
   * @param color Color to export
   * @private
   */
  private static exportColorToTailwind(color: Color) {
    const name = color.name.replace(/\s+/g, '-').toLowerCase()
    return `${name}: {\n${color.shades.map(s => this.exportShadeToTailwind(s)).join(',\n')}\n}`
  }

  /**
   * Export a shade for usage in TailwindCSS.
   * @param shade Shade to export
   * @private
   */
  private static exportShadeToTailwind(shade: Shade) {
    return `  ${shade.index}:${shade.index < 100 ? ' ' : ''} '${shade.hex}'`
  }

}
