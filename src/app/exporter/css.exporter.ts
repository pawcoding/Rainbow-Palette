import { Exporter } from '../interfaces/exporter.interface'
import { Color } from '../models/color.model'
import { Palette } from '../models/palette.model'
import { Shade } from '../models/shade.model'

export class CssExporter implements Exporter {
  /**
   * Export a palette for usage in a separate colors.css file.
   * @param palette Palette to export
   */
  exportFile(palette: Palette): string {
    return `:root {\n\t${this.exportContent(palette).replace(/\n/g, '\n\t')}\n}`
  }

  /**
   * Export a palette for usage in plain CSS as CSS properties.
   * @param palette Palette to export
   */
  exportContent(palette: Palette) {
    return `/* Color palette generated by ${
      window.location.origin
    } */\n\n${palette.colors.map((c) => this.exportColorToCSS(c)).join('\n\n')}`
  }

  /**
   * Export a color for usage in plain CSS as CSS properties.
   * @param color Color to export
   * @private
   */
  private exportColorToCSS(color: Color) {
    const name = color.name.replace(/\s+/g, '-').toLowerCase()
    return color.shades.map((s) => this.exportShadeToCSS(s, name)).join('\n')
  }

  /**
   * Export a shade for usage in plain CSS as CSS property.
   * @param shade Shade to export
   * @param name Name of the color
   * @private
   */
  private exportShadeToCSS(shade: Shade, name: string) {
    return `--${name}-${shade.index}:${shade.index < 100 ? ' ' : ''} ${
      shade.hex
    };`
  }
}
