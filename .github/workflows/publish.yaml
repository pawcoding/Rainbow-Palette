name: üöÄ Deploy website

# Controls when the action will run.
# Triggers the workflow on push on master branch
on:
  push:
    branches:
      - main

jobs:
  web-deploy:
    name: üéâ Deploy
    # using Ubuntu
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: üöö Get latest code
        uses: actions/checkout@v3

      # Setup Node v16
      - name: üíª Use node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Install pnpm
      - name: üì¶ Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false

      # Get pnpm store directory
      - name: üì¶ Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: üì¶ Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # Install dependencies and build project
      - name: üî® Build project
        run: |
          pnpm install --frozen-lockfile --prefer-frozen-lockfile
          pnpm install -g @angular/cli@16.0.0 > /dev/null
          pnpm run build

      # Upload to hosting
      - name: üì§ Upload to server
        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
        with:
          username: ${{ secrets.FTP_USER }}
          server: ${{ secrets.FTP_HOST }}
          port: ${{ secrets.FTP_PORT }}
          password: ${{ secrets.FTP_PASSWORD }}
          local_path: './dist/rainbow-palette'
          remote_path: './'
          sftp_only: true

      # Purge unused old Angular files via custom script
      - name: üóëÔ∏è Purge unused files
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.HTTP_PURGE }}
          method: 'GET'
